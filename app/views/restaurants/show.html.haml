.page-header
  %h1= @restaurant.name
%br

.row
  .span12
    %img{:src => @restaurant.picture}

%br

.row
  .span2
    %p
      %strong Type:
      = @restaurant.restaurant_type

  .span2
    %p
      %strong Spécialité:
      = @restaurant.speciality


  .span2
    %p
      %strong Budget min:
      = "#{@restaurant.budget_min} €"

  .span2
    %p
      %strong Budget max:
      = "#{@restaurant.budget_max} €"
        
  .span3
    %p
      %strong Temps de marche:
      = "#{@restaurant.time_to_go} minutes"

.row
  - marks = ["quality_food", "quality_service", "quantity", "ambience", "waiting", "global_rating"]
  - marks.each do |note|
    .span2
      %p
        %strong= "#{note.to_s.camelize}: "
        = @restaurant.reputation_value_for(:"#{note}")
        \/10

%br

.row
  .span12
    %blockquote
      %p= @restaurant.description
      %strong= @restaurant.name


%table.table.table-striped
  %tr
    %th
    %th #Lundi
    %th #Mardi
    %th #Mercredi
    %th #Jeudi
    %th #Vendredi
  - ["Morning", "Lunch", "Afternoon", "Evening"].each do |inter|
    %tr
      %th= "#" + t(:"#{inter.downcase}")
      - ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"].each do | day|
        %td
          = @restaurant.intervals.where(:day => day).first.interval_type[inter].blank? ? '<span class="red">Fermé</span>'.html_safe : '<span class="green">Ouvert</span>'.html_safe

%br
%br

.page-header
  %h3 Commentaires

- @restaurant.comments.each do |comment|
  .row
    .span12
      - if comment.reputation_value_for(:likes).to_i > 0
        %span.badge.badge-success= comment.reputation_value_for(:likes).to_i
      - if comment.reputation_value_for(:likes).to_i == 0
        %span.badge.badge-info= comment.reputation_value_for(:likes).to_i
      - if comment.reputation_value_for(:likes).to_i < 0
        %span.badge.badge-important= comment.reputation_value_for(:likes).to_i
      .pull-right
        %p 
          %strong
            %em= "#{comment.user.first_name} #{comment.user.last_name.upcase}"
  .row
    .span10
      %p{:style => "text-align: center;"}
        %strong= comment.title
      %br
      %p{:style => "text-align: center;"}= comment.comment.gsub("\n\r","<br>").gsub("\r", "").gsub("\n", "<br />").html_safe
      %br
      .pull-right
        = link_to '<i class="icon-plus" style="color:green;font-size:16px;text-decoration:none"></i>'.html_safe, like_restaurant_comment_path(comment, type: "like"), method: "post"
        = link_to '<i class="icon-minus" style="color:red;font-size:16px;text-decoration:none"></i>'.html_safe, like_restaurant_comment_path(comment, type: "dislike"), method: "post"
  %hr

.page-header
  %h3 
    %i.icon-comment
    Leave a comment

= simple_form_for([@restaurant, @comment]) do |f|
  = f.error_notification
  .form-horizontal
    .row
      .span12
        .control-group
          .control-label= f.label t(:comment_title)
          .controls= f.input_field :title, :class => "span6"
        .control-group
          .control-label= f.label t(:comment_comment)
          .controls= f.input_field :comment, :as => :text, :rows => 7, :class => "span6"

  .form-actions
    = f.button :submit, :class => "btn-primary"

%hr
.btn.btn-inverse
  = link_to restaurants_path, :style => "color:white!important;" do
    %i.icon-arrow-left.icon-white
    Back
.pull-right
  - if(user_signed_in? && (current_user.has_role? :admin))
    .btn.btn-inverse
      = link_to edit_restaurant_path(@restaurant), :style => "color:white!important;" do
        %i.icon-pencil.icon-white
        Edit
  .btn.btn-info
    = link_to new_restaurant_rating_path(@restaurant), :style => "color:white!important;" do
      %i.icon-star
      New Mark
%br
%br
%br
%br